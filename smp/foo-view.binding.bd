/*
**  foo-view.binding.bd -- BindingJS view binding for "foo" mask
*/

button(name, event) {
    attr:name <- i18n(lang, name)
    on:click -> event
}

div[data-name="pos"] (length(persons) > 0) {
    li (@person, @k: slice(sort("name", persons), window.begin, window.end)) {
        attr:data-id <- @person.id
        span[data-name="num"] {
            text <- sprintf('%03d', window.begin + @k)
        }
        span[data-name="intro"] { 
            text <- intro 
        }
        input {
            @p <- @person // just alias person
            attr:value <-> @p.name
            attr:disabled(remove: true) <- !@p.enabled
            css:color <- @p.enabled ? 'green' : 'red'
        }
        button {
            attr:name <- i18n(lang, "kill-person")
            on:click -> @person.kill
        }
    }
    button[data-name="kill"] { button("kill-persons", "event.kill-persons") }
    button[data-name="new"]  { button("new-persons",  "event.new-persons")  }
}

div[data-name="neg"] (length(persons) == 0) {
    text <~ i18n(lang, "no-persons-available")
}

