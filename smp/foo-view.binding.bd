/*
**  foo-view.binding.bd -- BindingJS view binding for "foo" mask
*/

@binding "foo" {
    button(name, event) {
        attr:name <- i18n(lang, name)
        on:click -> event
    }

    div[data-name="pos"] (data:persons.length > 0) {
        li (@person, @k: slice(sort("name", data:persons), param:window.begin, param:window.end)) {
            attr:data-id <- @person.id
            span[data-name="num"] {
                text <- sprintf('%03d', param:window.begin + @k)
            }
            span[data-name="intro"] {
                text <- intro
            }
            input {
                @p <- @person // just alias person
                on:change, on:keypress +> value <-> @p.name
                class:error <- validate(/^.+\s+.+$/) <- @p.name
                attr:disabled <- !@p.enabled
                css:color <- @p.enabled ? 'green' : 'red'
            }
            button {
                attr:name <- i18n(lang = param:lang, id = "kill-person")
                on:click -> @person.kill
            }
        }
        button[data-name="kill"] { button("kill-persons", "event:kill-persons") }
        button[data-name="new"]  { button("new-persons",  "event:new-persons")  }
    }

    div[data-name="neg"] (data:persons.length == 0) {
        text <~ i18n(param:lang, "no-persons-available")
    }
}

